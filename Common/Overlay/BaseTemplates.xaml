<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:b="clr-namespace:Common.Behaviors"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:flashMessages="clr-namespace:Common.FlashMessages"
                    xmlns:c="http://www.caliburnproject.org"
                    xmlns:converters="clr-namespace:Common.Converters">

    <ControlTemplate x:Key="OverlayTemplate" TargetType="{x:Type ContentControl}">
        <!-- https://www.codeproject.com/Articles/82464/How-to-Embed-Arbitrary-Content-in-a-WPF-Control -->
        <Grid>
            <Grid.Resources>
                <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            </Grid.Resources>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Content -->
            <ContentPresenter ContentSource="Content" />

            <!-- Overlay -->
            <Grid b:AnimateableVisibility.Visibility="{Binding LocalOverlay.IsActive, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=reversed}"
                  b:AnimateableVisibility.Duration="200"
                  Grid.Column="0"
                  Panel.ZIndex="1000">
                <Border>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding LocalOverlay.HideOverlayCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Border.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#000" Opacity=".35" />
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Border.Resources>
                </Border>

                <ContentControl VerticalAlignment="Center" HorizontalAlignment="Center" c:View.Model="{Binding LocalOverlay.Token.Content, UpdateSourceTrigger=PropertyChanged}" c:View.Context="{Binding LocalOverlay.Token.Content.Context, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </Grid>
    </ControlTemplate>
    
</ResourceDictionary>